# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

# If not running interactively, don't do anything
case $- in
    *i*) ;;
      *) return;;
esac

# history settings
#
# format
#
#export HISTTIMEFORMAT="%h %d %H:%M:%S "
#
# example
#   114  Jun 08 16:31:10 top
#   116  Jun 08 16:31:22 history
#
# number of command history & number of maxmium lines
export HISTSIZE=1000
export HISTFILESIZE=2000
#
# controller
#   ignorespace     don't save lines which begin with a <space> character
#   ignoredups      don't save lines matching the previous history entry
#   ignoreboth      use both 'ignorespace' and 'ignoredups'
#   erasedups       eliminate duplicates across the whole history
export HISTCONTROL=ignorespace
#
# ignore commands
#
# ignore ls & ps
#export HISTIGNORE="ls:ps"
#
# don't save commands start with s
#export HISTIGNORE="s*"
#
# change history file
#export HISTFILE=~/.my_file
#
# append hisotry rather than overwrite it
#shopt -s histappend
#
# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
#HISTCONTROL=ignoreboth

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
#shopt -s checkwinsize

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
#shopt -s globstar

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    alias dir='dir --color=auto'
    #alias vdir='vdir --color=auto'
    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi


# titlebar
PROMPT_COMMAND='echo -en "\033]0; level-$SHLVL: ${PWD} \a"'

# PS1
PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\[\033[00m\]:\[\033[01;34m\]\W\[\033[00m\]\$ '

# colored GCC warnings and errors
#export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'

# Add an "alert" alias for long running commands.  Use like so:
#   sleep 10; alert
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi

export PATH=~/.local/bin:$PATH

# openbabel
#export PATH=/home/xiang/Applications/openbabel-3.1.1/bin:$PATH
#export LD_LIBRARY_PATH=~/Applications/bin-openbabel-2.4.1/lib:$LD_LIBRARY_PATH

# rdkit
#export LD_LIBRARY_PATH=/home/xiang/Applications/rdkit-master/build/lib:$LD_LIBRARY_PATH

# xxz385 defined alias
alias rm='rm -i'
alias mv='mv -i'
alias cp='cp -i'
#alias dir='dir --color=auto'
#alias vdir='vdir --color=auto'

# pyenv
#export PYENV_ROOT="$HOME/Applications/pyenv" 
#export PATH=$PATH:$PYENV_ROOT/bin
#eval "$(pyenv init -)"
#export PATH=/home/xiang/Applications/pyenv/versions/3.8.3/bin:$PATH

# Gaussian_09
g09root="/home/xiang/Applications"
    GAUSS_SCRDIR="/home/xiang/Temp"
    GAUSS_ARCHDIR="/home/xiang/Temp"
    export g09root GAUSS_SCRDIR GAUSS_ARCHDIR
    . $g09root/g09/bsd/g09.profile

#g16root="/home/xiang/Applications"
#    GAUSS_SCRDIR="/home/xiang/Temp"
#    GAUSS_ARCHDIR="/home/xiang/Temp"
#    export g16root GAUSS_SCRDIR GAUSS_ARCHDIR
#    . $g16root/g16/bsd/g16.profile

# Schrodinger
#export SCHRODINGER='/home/xiang/Applications/Schrodinger_201502'
export SCHRODINGER='/home/xiang/Applications/Schrodinger_202102'
export SCHRODINGER_CANVAS_MAX_MEM=3GB

# BOSS
export BOSSdir="/home/xiang/Applications/BOSS/boss49-G09-IL"

# packmol
export PATH=/home/xiang/Applications/packmol-18.169/bin:$PATH

# Matlab
#export PATH=/usr/local/MATLAB/R2016b/bin:$PATH

# define default editor
export EDITOR=gedit

# travis
export PATH=/home/xiang/Applications/travis-src-190101/exe:$PATH

alias visclean='for i in vis_*; do if [[ ! -f $i/vis.gro ]]; 
    then echo "<$i> remove everything"; rm -f $i/*; 
    else cd $i; echo "<$i> process"; 
    rm -f vis.cpt vis.log energy* \#energy* mdout*; 
    cd ../; fi; done'

alias prodclean='rm -f energy* \#energy* mdout* \#mdout* prod.{cpt,log};
    rm prod_prev.cpt surf.{cpt,log} surf_prev.cpt tmp* min* npt* *err *out prod_surf*'

# python server
alias python-server="python -m http.server 8000"

# rubygems
if which ruby >/dev/null && which gem >/dev/null; then
    export GEM_HOME="$(ruby -r rubygems -e 'puts Gem.user_dir')"
    PATH="$GEM_HOME/bin:$PATH"
fi

# gromacs
source /home/xiang/Applications/gromacs-2021.5/build/gromacs/bin/GMXRC.bash

unset no_proxy NO_PROXY HTTPS_PROXY https_proxy

# gunzip
alias gunzip='gunzip -k'

# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/home/xiang/Applications/miniconda3/bin/conda' 'shell.bash' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/home/xiang/Applications/miniconda3/etc/profile.d/conda.sh" ]; then
        . "/home/xiang/Applications/miniconda3/etc/profile.d/conda.sh"
    else
        export PATH="/home/xiang/Applications/miniconda3/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<


# amber
source /home/xiang/Applications/amber20/amber.sh

# PMV
export MGL_ROOT=/home/xiang/Applications/mgltools_x86_64Linux2_1.5.7
# Autodock
export PATH=/home/xiang/Applications/autodock-4.2.6/bin:$PATH

# intel
export PATH=/home/xiang/Applications/intel/oneapi/compiler/2022.1.0/linux/bin/intel64:$PATH
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/home/xiang/Applications/intel/oneapi/compiler/2022.1.0/linux/compiler/lib/intel64_lin



